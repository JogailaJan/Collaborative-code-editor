@model Project
@{
    var chosenUserName = Context.Session.GetString("ChosenUserName");
}
<script src="~/js/messageBuilder.js"></script>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>

<script>
    var chatConnection = new signalR.HubConnectionBuilder()
        .withUrl("/chatHub")
        .build();

    chatConnection.on("ReceiveMessage", function (data) {
        var messageElement = document.createElement("div");
        messageElement.innerHTML = `<div class="message">
                <header class="text-light">${data.name}:</header>
                <p class="text-light">${data.text}</p>
            </div>`;
        document.querySelector('.chat-body').append(messageElement);

        document.querySelector('.chat-body').append(message);
    });
    chatConnection.start().then(function () {
        console.log("Connected to SignalR hub.");
        chatConnection.invoke('joinRoom', '@Model.Id');
    }).catch(function (err) {
        console.log(err)
    });

    window.addEventListener('unload', function () {
        console.log("Disconnected to SignalR hub.");
        chatConnection.invoke('LeaveRoom', '@Model.Id');
    })

    var sendMessage = function (event) {
        event.preventDefault();

        var data = new FormData(event.target);
        console.log("@chosenUserName");
        document.getElementById('message-input').value = '';
        axios.post('/Home/SendMessage', data)
            .then(res => {
                console.log("Message Sent!")
            })
            .catch(err => {
                console.log("Failed to send message!")
            })
    }

</script>
<div class="bg-dark border-start d-flex flex-column-reverse flex-grow-1 bg-light p-3"  style="overflow: auto;
    overflow-anchor: auto !important; ">
    <div class="chat-body">
        @foreach (var message in Model.Messages)
        {
            <div class="message">
                <header class="text-light">@message.Name:</header>
                <p class="text-light">@message.Text</p>
            </div>
        }
    </div>
</div>
<form class="chat-input" onsubmit="sendMessage(event)" >
    <input type="hidden" name="roomId" value="@Model.Id">
    <input type="hidden" name="userName" value="@chosenUserName">
    <input type="text" name="message" id="message-input">
    <button type="submit">Send</button>
</form>